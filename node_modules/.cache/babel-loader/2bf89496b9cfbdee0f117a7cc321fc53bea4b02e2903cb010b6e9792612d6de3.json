{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Agus\\\\Documents\\\\Henry\\\\Proyecto Individual\\\\PI REAL\\\\PI-Food-main\\\\PI-Food-AgustinBoasso38a\\\\client\\\\src\\\\Components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRecipes, setSelectedDietType } from '../../redux/actions';\nimport Card from '../Card/Card';\nimport styles from './Cards.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const dispatch = useDispatch();\n  const recipes = useSelector(state => state.recipes);\n  const currentPage = useSelector(state => state.currentPage);\n  const selectedTypes = useSelector(state => state.selectedTypes);\n  const recipesPerPage = 10; // Número de recetas por página\n\n  useEffect(() => {\n    dispatch(getRecipes());\n  }, [dispatch]);\n  const handleTypeChange = event => {\n    const selectedOptions = Array.from(event.target.selectedOptions, option => option.value);\n    dispatch(setSelectedDietType(selectedOptions));\n  };\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = recipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filter,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"recipeTypes\",\n        children: \"Tipos de Receta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"recipeTypes\",\n        multiple: true,\n        value: selectedTypes,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Desayuno\",\n          children: \"Desayuno\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Almuerzo\",\n          children: \"Almuerzo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Cena\",\n          children: \"Cena\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(setSelectedDietType([])),\n        children: \"Limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), currentRecipes.filter(recipe => selectedTypes.length === 0 || selectedTypes.includes(recipe.type)).map(recipe => {\n      let diets = [];\n      if (Array.isArray(recipe.diets)) {\n        diets = recipe.diets;\n      }\n      return /*#__PURE__*/_jsxDEV(Card, {\n        id: recipe.id,\n        name: recipe.name,\n        image: recipe.image,\n        diet: diets\n      }, recipe.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"IdGyc8RQnrBQAyHiEMjmP6UyPX0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = Cards;\nexport default Cards;\n\n// import Card from '../Card/Card'\n// import styles from './Cards.module.css'\n// import {useSelector} from 'react-redux'\n\n// const Cards = () => {\n//   const recipes = useSelector(state=>state.recipes)\n\n//   return (\n//     <div className={styles.container}>\n\n//       {recipes.map(recipe => {\n//   let diets = []; // Array vacío por defecto\n//   if (Array.isArray(recipe.diets)) {\n//     diets = recipe.diets; // Asignar el array de dietas si es válido\n//   }\n\n//   return (\n//     <Card \n//       name={recipe.name}\n//       image={recipe.image}\n//       diet={diets}\n//     />\n//   );\n// })}\n\n//     </div>\n//   )\n// }\n\n// export default Cards\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getRecipes","setSelectedDietType","Card","styles","jsxDEV","_jsxDEV","Cards","_s","dispatch","recipes","state","currentPage","selectedTypes","recipesPerPage","handleTypeChange","event","selectedOptions","Array","from","target","option","value","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","className","container","children","filter","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","multiple","onChange","onClick","recipe","length","includes","type","map","diets","isArray","name","image","diet","_c","$RefreshReg$"],"sources":["C:/Users/Agus/Documents/Henry/Proyecto Individual/PI REAL/PI-Food-main/PI-Food-AgustinBoasso38a/client/src/Components/Cards/Cards.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRecipes, setSelectedDietType } from '../../redux/actions';\r\nimport Card from '../Card/Card';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = () => {\r\n  const dispatch = useDispatch();\r\n  const recipes = useSelector((state) => state.recipes);\r\n  const currentPage = useSelector((state) => state.currentPage);\r\n  const selectedTypes = useSelector((state) => state.selectedTypes);\r\n  const recipesPerPage = 10; // Número de recetas por página\r\n\r\n  useEffect(() => {\r\n    dispatch(getRecipes());\r\n  }, [dispatch]);\r\n\r\n  const handleTypeChange = (event) => {\r\n    const selectedOptions = Array.from(event.target.selectedOptions, (option) => option.value);\r\n    dispatch(setSelectedDietType(selectedOptions));\r\n  };\r\n\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;\r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = recipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.filter}>\r\n        <label htmlFor=\"recipeTypes\">Tipos de Receta:</label>\r\n        <select\r\n          id=\"recipeTypes\"\r\n          multiple\r\n          value={selectedTypes}\r\n          onChange={handleTypeChange}\r\n        >\r\n          <option value=\"Desayuno\">Desayuno</option>\r\n          <option value=\"Almuerzo\">Almuerzo</option>\r\n          <option value=\"Cena\">Cena</option>\r\n          {/* Agrega aquí más opciones de tipos de receta */}\r\n        </select>\r\n        <button onClick={() => dispatch(setSelectedDietType([]))}>Limpiar</button>\r\n      </div>\r\n\r\n      {currentRecipes\r\n        .filter((recipe) => selectedTypes.length === 0 || selectedTypes.includes(recipe.type))\r\n        .map((recipe) => {\r\n          let diets = [];\r\n          if (Array.isArray(recipe.diets)) {\r\n            diets = recipe.diets;\r\n          }\r\n\r\n          return (\r\n            <Card\r\n              id={recipe.id}\r\n              key={recipe.id}\r\n              name={recipe.name}\r\n              image={recipe.image}\r\n              diet={diets}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n// import Card from '../Card/Card'\r\n// import styles from './Cards.module.css'\r\n// import {useSelector} from 'react-redux'\r\n\r\n\r\n\r\n// const Cards = () => {\r\n//   const recipes = useSelector(state=>state.recipes)\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n      \r\n//       {recipes.map(recipe => {\r\n//   let diets = []; // Array vacío por defecto\r\n//   if (Array.isArray(recipe.diets)) {\r\n//     diets = recipe.diets; // Asignar el array de dietas si es válido\r\n//   }\r\n\r\n//   return (\r\n//     <Card \r\n//       name={recipe.name}\r\n//       image={recipe.image}\r\n//       diet={diets}\r\n//     />\r\n//   );\r\n// })}\r\n      \r\n\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Cards"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
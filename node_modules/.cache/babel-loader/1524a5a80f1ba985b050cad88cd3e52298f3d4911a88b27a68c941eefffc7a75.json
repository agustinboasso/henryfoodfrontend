{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Agus\\\\Documents\\\\Henry\\\\Proyecto Individual\\\\PI REAL\\\\PI-Food-main\\\\PI-Food-AgustinBoasso38a\\\\client\\\\src\\\\Components\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getRecipes } from '../../redux/actions'; // Elimina la importación de setSelectedDietTypes si no se utiliza\nimport Card from '../Card/Card';\nimport styles from './Cards.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const dispatch = useDispatch();\n  const recipes = useSelector(state => state.recipes);\n  const currentPage = useSelector(state => state.currentPage);\n  const recipesPerPage = 10; // Número de recetas por página\n  const [selectedDietTypes, setSelectedDietTypes] = useState([]);\n  useEffect(() => {\n    dispatch(getRecipes());\n  }, [dispatch]);\n\n  // Obtener todos los tipos de dieta disponibles\n  const dietTypes = [...new Set(recipes.map(recipe => recipe.diet))];\n\n  // Lógica para obtener las recetas de la página actual\n  const indexOfLastRecipe = currentPage * recipesPerPage;\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\n  const currentRecipes = recipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\n\n  // Manejar cambios en el desplegable de dietas\n  const handleDietTypeChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      setSelectedDietTypes(prevSelectedDietTypes => [...prevSelectedDietTypes, value]);\n    } else {\n      setSelectedDietTypes(prevSelectedDietTypes => prevSelectedDietTypes.filter(type => type !== value));\n    }\n  };\n\n  // Filtrar las recetas según las dietas seleccionadas\n  const filteredRecipes = selectedDietTypes.length > 0 ? recipes.filter(recipe => selectedDietTypes.includes(recipe.diet)) : recipes;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dietFilter\",\n        children: \"Filtrar por dieta:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"dietFilter\",\n        multiple: true,\n        value: selectedDietTypes,\n        onChange: handleDietTypeChange,\n        children: dietTypes.map(dietType => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: dietType,\n          children: dietType\n        }, dietType, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currentRecipes.map(recipe => /*#__PURE__*/_jsxDEV(Card, {\n      id: recipe.id,\n      name: recipe.name,\n      image: recipe.image,\n      diet: recipe.diet\n    }, recipe.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Cards, \"17L8ghlbgPuipbFB8AmfRnwQKbw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Cards;\nexport default Cards;\n\n// import Card from '../Card/Card'\n// import styles from './Cards.module.css'\n// import {useSelector} from 'react-redux'\n\n// const Cards = () => {\n//   const recipes = useSelector(state=>state.recipes)\n\n//   return (\n//     <div className={styles.container}>\n\n//       {recipes.map(recipe => {\n//   let diets = []; // Array vacío por defecto\n//   if (Array.isArray(recipe.diets)) {\n//     diets = recipe.diets; // Asignar el array de dietas si es válido\n//   }\n\n//   return (\n//     <Card \n//       name={recipe.name}\n//       image={recipe.image}\n//       diet={diets}\n//     />\n//   );\n// })}\n\n//     </div>\n//   )\n// }\n\n// export default Cards\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","getRecipes","Card","styles","jsxDEV","_jsxDEV","Cards","_s","dispatch","recipes","state","currentPage","recipesPerPage","selectedDietTypes","setSelectedDietTypes","dietTypes","Set","map","recipe","diet","indexOfLastRecipe","indexOfFirstRecipe","currentRecipes","slice","handleDietTypeChange","event","value","checked","target","prevSelectedDietTypes","filter","type","filteredRecipes","length","includes","className","container","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","multiple","onChange","dietType","name","image","_c","$RefreshReg$"],"sources":["C:/Users/Agus/Documents/Henry/Proyecto Individual/PI REAL/PI-Food-main/PI-Food-AgustinBoasso38a/client/src/Components/Cards/Cards.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getRecipes } from '../../redux/actions'; // Elimina la importación de setSelectedDietTypes si no se utiliza\r\nimport Card from '../Card/Card';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = () => {\r\n  const dispatch = useDispatch();\r\n  const recipes = useSelector((state) => state.recipes);\r\n  const currentPage = useSelector((state) => state.currentPage);\r\n  const recipesPerPage = 10; // Número de recetas por página\r\n  const [selectedDietTypes, setSelectedDietTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getRecipes());\r\n  }, [dispatch]);\r\n\r\n  // Obtener todos los tipos de dieta disponibles\r\n  const dietTypes = [...new Set(recipes.map((recipe) => recipe.diet))];\r\n\r\n  // Lógica para obtener las recetas de la página actual\r\n  const indexOfLastRecipe = currentPage * recipesPerPage;\r\n  const indexOfFirstRecipe = indexOfLastRecipe - recipesPerPage;\r\n  const currentRecipes = recipes.slice(indexOfFirstRecipe, indexOfLastRecipe);\r\n\r\n  // Manejar cambios en el desplegable de dietas\r\n  const handleDietTypeChange = (event) => {\r\n    const { value, checked } = event.target;\r\n    if (checked) {\r\n      setSelectedDietTypes((prevSelectedDietTypes) => [...prevSelectedDietTypes, value]);\r\n    } else {\r\n      setSelectedDietTypes((prevSelectedDietTypes) => prevSelectedDietTypes.filter((type) => type !== value));\r\n    }\r\n  };\r\n\r\n  // Filtrar las recetas según las dietas seleccionadas\r\n  const filteredRecipes = selectedDietTypes.length > 0\r\n    ? recipes.filter((recipe) => selectedDietTypes.includes(recipe.diet))\r\n    : recipes;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {/* Desplegable para filtrar por dietas */}\r\n      <div>\r\n        <label htmlFor=\"dietFilter\">Filtrar por dieta:</label>\r\n        <select\r\n          id=\"dietFilter\"\r\n          multiple\r\n          value={selectedDietTypes}\r\n          onChange={handleDietTypeChange}\r\n        >\r\n          {/* Opciones del desplegable */}\r\n          {dietTypes.map((dietType) => (\r\n            <option key={dietType} value={dietType}>{dietType}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Mostrar las recetas filtradas */}\r\n      {currentRecipes.map((recipe) => (\r\n        <Card\r\n          id={recipe.id}\r\n          key={recipe.id}\r\n          name={recipe.name}\r\n          image={recipe.image}\r\n          diet={recipe.diet}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n\r\n\r\n// import Card from '../Card/Card'\r\n// import styles from './Cards.module.css'\r\n// import {useSelector} from 'react-redux'\r\n\r\n\r\n\r\n// const Cards = () => {\r\n//   const recipes = useSelector(state=>state.recipes)\r\n\r\n//   return (\r\n//     <div className={styles.container}>\r\n      \r\n//       {recipes.map(recipe => {\r\n//   let diets = []; // Array vacío por defecto\r\n//   if (Array.isArray(recipe.diets)) {\r\n//     diets = recipe.diets; // Asignar el array de dietas si es válido\r\n//   }\r\n\r\n//   return (\r\n//     <Card \r\n//       name={recipe.name}\r\n//       image={recipe.image}\r\n//       diet={diets}\r\n//     />\r\n//   );\r\n// })}\r\n      \r\n\r\n\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Cards"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,qBAAqB,CAAC,CAAC;AAClD,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,OAAO,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrD,MAAME,WAAW,GAAGZ,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAC7D,MAAMC,cAAc,GAAG,EAAE,CAAC,CAAC;EAC3B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE9DD,SAAS,CAAC,MAAM;IACdW,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACO,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMO,SAAS,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACP,OAAO,CAACQ,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC;;EAEpE;EACA,MAAMC,iBAAiB,GAAGT,WAAW,GAAGC,cAAc;EACtD,MAAMS,kBAAkB,GAAGD,iBAAiB,GAAGR,cAAc;EAC7D,MAAMU,cAAc,GAAGb,OAAO,CAACc,KAAK,CAACF,kBAAkB,EAAED,iBAAiB,CAAC;;EAE3E;EACA,MAAMI,oBAAoB,GAAIC,KAAK,IAAK;IACtC,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IACvC,IAAID,OAAO,EAAE;MACXb,oBAAoB,CAAEe,qBAAqB,IAAK,CAAC,GAAGA,qBAAqB,EAAEH,KAAK,CAAC,CAAC;IACpF,CAAC,MAAM;MACLZ,oBAAoB,CAAEe,qBAAqB,IAAKA,qBAAqB,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKL,KAAK,CAAC,CAAC;IACzG;EACF,CAAC;;EAED;EACA,MAAMM,eAAe,GAAGnB,iBAAiB,CAACoB,MAAM,GAAG,CAAC,GAChDxB,OAAO,CAACqB,MAAM,CAAEZ,MAAM,IAAKL,iBAAiB,CAACqB,QAAQ,CAAChB,MAAM,CAACC,IAAI,CAAC,CAAC,GACnEV,OAAO;EAEX,oBACEJ,OAAA;IAAK8B,SAAS,EAAEhC,MAAM,CAACiC,SAAU;IAAAC,QAAA,gBAE/BhC,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAOiC,OAAO,EAAC,YAAY;QAAAD,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtDrC,OAAA;QACEsC,EAAE,EAAC,YAAY;QACfC,QAAQ;QACRlB,KAAK,EAAEb,iBAAkB;QACzBgC,QAAQ,EAAErB,oBAAqB;QAAAa,QAAA,EAG9BtB,SAAS,CAACE,GAAG,CAAE6B,QAAQ,iBACtBzC,OAAA;UAAuBqB,KAAK,EAAEoB,QAAS;UAAAT,QAAA,EAAES;QAAQ,GAApCA,QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqC,CAC3D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLpB,cAAc,CAACL,GAAG,CAAEC,MAAM,iBACzBb,OAAA,CAACH,IAAI;MACHyC,EAAE,EAAEzB,MAAM,CAACyB,EAAG;MAEdI,IAAI,EAAE7B,MAAM,CAAC6B,IAAK;MAClBC,KAAK,EAAE9B,MAAM,CAAC8B,KAAM;MACpB7B,IAAI,EAAED,MAAM,CAACC;IAAK,GAHbD,MAAM,CAACyB,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnC,EAAA,CAhEID,KAAK;EAAA,QACQN,WAAW,EACZD,WAAW,EACPA,WAAW;AAAA;AAAAkD,EAAA,GAH3B3C,KAAK;AAkEX,eAAeA,KAAK;;AAGpB;AACA;AACA;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
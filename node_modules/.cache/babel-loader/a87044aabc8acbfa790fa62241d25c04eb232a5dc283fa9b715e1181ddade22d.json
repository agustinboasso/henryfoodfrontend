{"ast":null,"code":"import axios from \"axios\";\nexport const GET_DIETS = \"GET_DIETS\";\nexport const ADD_RECIPE = \"ADD_RECIPE\";\nexport const GET_RECIPES = \"GET_RECIPES\";\nexport const SRC_RECIPE = \"SRC_RECIPE\";\nexport const GET_RECIPEID = \"GET_RECIPEID\";\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\n\n//trae todas las recetas\nexport const getRecipes = () => {\n  return async function (dispatch) {\n    const apiData = await axios.get(`http://localhost:3001/recipes`);\n    const recipes = apiData.data;\n    dispatch({\n      type: GET_RECIPES,\n      payload: recipes\n    });\n  };\n};\nexport const addRecipe = recipe => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.post('http://localhost:3001/recipes', recipe);\n      dispatch({\n        type: ADD_RECIPE,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const getDiets = () => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get('http://localhost:3001/diets');\n      dispatch({\n        type: GET_DIETS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n};\nexport const searchRecipes = name => {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:3001/recipes?name=${name}`);\n      if (data.length > 0) {\n        dispatch({\n          type: SRC_RECIPE,\n          payload: data\n        });\n      } else {\n        alert('No hay recetas con este nombre.');\n      }\n    } catch (error) {\n      console.error(error);\n      alert('Error al buscar recetas.');\n    }\n  };\n};\nexport const getRecipeId = id => {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get(`http://localhost:3001/recipes/${id}`);\n      const recipe = response.data;\n      dispatch({\n        type: GET_RECIPEID,\n        payload: recipe\n      });\n    } catch (error) {\n      console.error(error);\n      alert('Error al buscar recetas.');\n    }\n  };\n};\nexport const cleanDetail = () => {\n  return {};\n};\n\n//trae el detalles las recetas\n// /:idRecipe\n// export const getRecipeId = (id) => {\n//     return async function (dispatch){\n//         const apiData = await axios.get(`http://localhost:3001/recipes/:idRecipes`)\n//         const user = apiData.data;\n//         dispatch({type: GET_USER, payload: recipe})\n//     }\n// }\n\n//filtros van aca\n\n// export const filterBySource = ()=>{\n//     dispatch({type: FILTER_GET, payload:)\n// }","map":{"version":3,"names":["axios","GET_DIETS","ADD_RECIPE","GET_RECIPES","SRC_RECIPE","GET_RECIPEID","CLEAN_DETAIL","getRecipes","dispatch","apiData","get","recipes","data","type","payload","addRecipe","recipe","response","post","error","console","getDiets","searchRecipes","name","length","alert","getRecipeId","id","cleanDetail"],"sources":["C:/Users/Agus/Documents/Henry/Proyecto Individual/PI REAL/PI-Food-main/PI-Food-main/client/src/redux/actions.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nexport const GET_DIETS = \"GET_DIETS\";\r\nexport const ADD_RECIPE = \"ADD_RECIPE\"\r\nexport const GET_RECIPES = \"GET_RECIPES\";\r\nexport const SRC_RECIPE = \"SRC_RECIPE\";\r\nexport const GET_RECIPEID = \"GET_RECIPEID\";\r\nexport const CLEAN_DETAIL = \"CLEAN_DETAIL\";\r\n\r\n//trae todas las recetas\r\nexport const getRecipes = () => {\r\n    return async function (dispatch){\r\n        const apiData = await axios.get(`http://localhost:3001/recipes`)\r\n        const recipes = apiData.data;\r\n        dispatch({type: GET_RECIPES, payload: recipes})\r\n    }\r\n}\r\n\r\n\r\nexport const addRecipe = (recipe) => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/recipes', recipe);\r\n      dispatch({ type: ADD_RECIPE, payload: response.data });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const getDiets = () => {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/diets');\r\n      dispatch({ type: GET_DIETS, payload: response.data });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const searchRecipes = (name) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const { data } = await axios.get(`http://localhost:3001/recipes?name=${name}`);\r\n      \r\n      if (data.length > 0) {\r\n        dispatch({\r\n          type: SRC_RECIPE,\r\n          payload: data\r\n        });\r\n      } else {\r\n        alert('No hay recetas con este nombre.');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error al buscar recetas.');\r\n    }\r\n  };\r\n};\r\n\r\n\r\nexport const getRecipeId = (id) => {\r\n  \r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3001/recipes/${id}`);\r\n      const recipe = response.data;\r\n      \r\n      dispatch({ type: GET_RECIPEID, payload: recipe });\r\n    } catch (error) {\r\n      console.error(error);\r\n      alert('Error al buscar recetas.');\r\n    }\r\n  };\r\n};\r\n\r\nexport const cleanDetail = () => {\r\n  return {}  \r\n}\r\n\r\n//trae el detalles las recetas\r\n// /:idRecipe\r\n// export const getRecipeId = (id) => {\r\n//     return async function (dispatch){\r\n//         const apiData = await axios.get(`http://localhost:3001/recipes/:idRecipes`)\r\n//         const user = apiData.data;\r\n//         dispatch({type: GET_USER, payload: recipe})\r\n//     }\r\n// }\r\n\r\n//filtros van aca\r\n\r\n// export const filterBySource = ()=>{\r\n//     dispatch({type: FILTER_GET, payload:)\r\n// } "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,WAAW,GAAG,aAAa;AACxC,OAAO,MAAMC,UAAU,GAAG,YAAY;AACtC,OAAO,MAAMC,YAAY,GAAG,cAAc;AAC1C,OAAO,MAAMC,YAAY,GAAG,cAAc;;AAE1C;AACA,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAC5B,OAAO,gBAAgBC,QAAQ,EAAC;IAC5B,MAAMC,OAAO,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,+BAA8B,CAAC;IAChE,MAAMC,OAAO,GAAGF,OAAO,CAACG,IAAI;IAC5BJ,QAAQ,CAAC;MAACK,IAAI,EAAEV,WAAW;MAAEW,OAAO,EAAEH;IAAO,CAAC,CAAC;EACnD,CAAC;AACL,CAAC;AAGD,OAAO,MAAMI,SAAS,GAAIC,MAAM,IAAK;EACnC,OAAO,gBAAgBR,QAAQ,EAAE;IAC/B,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,+BAA+B,EAAEF,MAAM,CAAC;MAC1ER,QAAQ,CAAC;QAAEK,IAAI,EAAEX,UAAU;QAAEY,OAAO,EAAEG,QAAQ,CAACL;MAAK,CAAC,CAAC;IACxD,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAME,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAO,gBAAgBb,QAAQ,EAAE;IAC/B,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACU,GAAG,CAAC,6BAA6B,CAAC;MAC/DF,QAAQ,CAAC;QAAEK,IAAI,EAAEZ,SAAS;QAAEa,OAAO,EAAEG,QAAQ,CAACL;MAAK,CAAC,CAAC;IACvD,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAMG,aAAa,GAAIC,IAAI,IAAK;EACrC,OAAO,MAAOf,QAAQ,IAAK;IACzB,IAAI;MACF,MAAM;QAAEI;MAAK,CAAC,GAAG,MAAMZ,KAAK,CAACU,GAAG,CAAE,sCAAqCa,IAAK,EAAC,CAAC;MAE9E,IAAIX,IAAI,CAACY,MAAM,GAAG,CAAC,EAAE;QACnBhB,QAAQ,CAAC;UACPK,IAAI,EAAET,UAAU;UAChBU,OAAO,EAAEF;QACX,CAAC,CAAC;MACJ,CAAC,MAAM;QACLa,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBM,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;AACH,CAAC;AAGD,OAAO,MAAMC,WAAW,GAAIC,EAAE,IAAK;EAEjC,OAAO,gBAAgBnB,QAAQ,EAAE;IAC/B,IAAI;MACF,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACU,GAAG,CAAE,iCAAgCiB,EAAG,EAAC,CAAC;MACvE,MAAMX,MAAM,GAAGC,QAAQ,CAACL,IAAI;MAE5BJ,QAAQ,CAAC;QAAEK,IAAI,EAAER,YAAY;QAAES,OAAO,EAAEE;MAAO,CAAC,CAAC;IACnD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBM,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM;EAC/B,OAAO,CAAC,CAAC;AACX,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}